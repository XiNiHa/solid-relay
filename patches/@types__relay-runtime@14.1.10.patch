diff --git a/lib/store/RelayModernEnvironment.d.ts b/lib/store/RelayModernEnvironment.d.ts
index 498520020d4b1eb41e43067949f6afbabe790b55..dd111dcea88563276fdee437a7d6c252b722a3a6 100755
--- a/lib/store/RelayModernEnvironment.d.ts
+++ b/lib/store/RelayModernEnvironment.d.ts
@@ -47,6 +47,7 @@ export default class RelayModernEnvironment implements Environment {
     configName: string | null | undefined;
     requiredFieldLogger: RequiredFieldLogger;
     constructor(config: EnvironmentConfig);
+    UNSTABLE_getDefaultRenderPolicy(): RenderPolicy;
     getStore(): Store;
     getNetwork(): Network;
     getOperationTracker(): RelayOperationTracker;
diff --git a/lib/store/RelayModernStore.d.ts b/lib/store/RelayModernStore.d.ts
index 99d0e7c503d80ebdc64f0e7be71e238ac186e69a..67688625ee34ce68fc8827a8502efef7884564c0 100755
--- a/lib/store/RelayModernStore.d.ts
+++ b/lib/store/RelayModernStore.d.ts
@@ -29,6 +29,7 @@ export default class RelayModernStore implements Store {
         },
     );
     getSource(): RecordSource;
+    getEpoch(): number;
     check(operation: OperationDescriptor, options?: CheckOptions): OperationAvailability;
     retain(operation: OperationDescriptor): Disposable;
     lookup(selector: SingularReaderSelector): Snapshot;
diff --git a/lib/store/RelayStoreTypes.d.ts b/lib/store/RelayStoreTypes.d.ts
index 6af99687e464896c0d1cc0eb6279fde247799382..44d46cd7e6a5761808da174587dd06578ed44635 100755
--- a/lib/store/RelayStoreTypes.d.ts
+++ b/lib/store/RelayStoreTypes.d.ts
@@ -85,6 +85,16 @@ export interface NormalizationSelector {
     readonly variables: Variables;
 }
 
+export type MissingLiveResolverField = {
+  path: string;
+  liveStateID: DataID;
+}
+
+export type MissingClientEdgeRequestInfo = {
+  request: ConcreteRequest;
+  clientEdgeDestinationID: DataID;
+}
+
 /**
  * A representation of a selector and its results at a particular point in time.
  */
@@ -93,6 +103,10 @@ export interface TypedSnapshot<TData> {
     readonly isMissingData: boolean;
     readonly seenRecords: RecordMap;
     readonly selector: SingularReaderSelector;
+    readonly missingLiveResolverFields?: MissingLiveResolverField[];
+    readonly missingClientEdges: MissingClientEdgeRequestInfo[] | null;
+    readonly missingRequiredFields: MissingRequiredFields | null
+    readonly relayResolverErrors: RelayResolverErrors
 }
 export type Snapshot = TypedSnapshot<SelectorData>;
 
@@ -223,6 +237,8 @@ export interface Store {
      */
     getSource(): RecordSource;
 
+    getEpoch(): number
+
     /**
      * Determine if the operation can be resolved with data in the store (i.e. no
      * fields are missing).
@@ -635,6 +651,8 @@ export interface Environment {
      */
     getOperationTracker(): RelayOperationTracker;
 
+    UNSTABLE_getDefaultRenderPolicy(): RenderPolicy
+
     /**
      * Read the results of a selector from in-memory records in the store.
      * Optionally takes an owner, corresponding to the operation that
diff --git a/lib/util/ReaderNode.d.ts b/lib/util/ReaderNode.d.ts
index 2e6a99d0268a9c042139ce746185cf906d42e72c..080eb79b23379f615e7cb092794efecdf0f87f63 100755
--- a/lib/util/ReaderNode.d.ts
+++ b/lib/util/ReaderNode.d.ts
@@ -34,6 +34,7 @@ export interface ReaderFragment {
               readonly connection?: ReadonlyArray<ConnectionMetadata>;
               readonly mask?: boolean;
               readonly plural?: boolean;
+              readonly hasClientEdges?: boolean;
               readonly refetch?: ReaderRefetchMetadata;
           }
         | null